/*
 * Copyright (C) 2015 leo
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package application.swing_utils;

import application.model.LineInfo;
import application.model.RamTableModel;
import application.renderer.DataTableRenderer;
import application.renderer.MyTableHeaderRenderer;
import cache.Ram;
import javax.swing.JScrollBar;

/**
 *
 * @author leo
 */
public class RamViewer extends javax.swing.JPanel {
    private Ram ramToVisualize;
    private RamTableModel model;

    /**
     * Creates new form RamViewer
     */
    public RamViewer() {
        initComponents();
        initTable();
    }
    
    private void initTable() {
        if (ramToVisualize != null) {
            model = new RamTableModel(ramToVisualize);
        }
        
        jTable1.setDefaultRenderer(Object.class, new DataTableRenderer());
        jTable1.getTableHeader().setDefaultRenderer(new MyTableHeaderRenderer());
    }
    
    public int getLineVisible() {
        return (jScrollPane1.getHeight() / 16) - 1;
    }
    
    public void setRegion(int percent, int gap) {
        final int ratio = 16 / gap;
        
        JScrollBar yBar = jScrollPane1.getVerticalScrollBar();
        yBar.setValue(percent * ratio);
    }
    
    public void setRam(Ram ram) {
        LineInfo info;

        ramToVisualize = ram;
        model = new RamTableModel(ramToVisualize);
        jTable1.setModel(model);
                
        model.update();
        
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMaxWidth(18 + 10 * 8);
            jTable1.getColumnModel().getColumn(0).setMinWidth(18 + 10 * 8);

//            jTable1.getColumnModel().getColumn(1).setMaxWidth(14 + 32 * 8);
//            jTable1.getColumnModel().getColumn(1).setMinWidth(14 + 32 * 8);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollViewer1 = new application.swing_utils.ScrollViewer();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());
        add(scrollViewer1, java.awt.BorderLayout.LINE_START);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private application.swing_utils.ScrollViewer scrollViewer1;
    // End of variables declaration//GEN-END:variables
}
